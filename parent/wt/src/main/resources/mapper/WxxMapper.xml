<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mybatis框架只有接口 没有实现类
     mybatis的映射文件就相当于是接口的实现类
               主要用来编写sql语句
     mapper 需要与映射接口对应
     namespace 配置类的全限定名
 -->
<mapper namespace="com.jk.dao.WxxDao" >
   <resultMap type="com.jk.pojo.Power" id="p">
       <id column="id" property="id"/>
       <result column="text" property="text"></result>
       <result column="parentid" property="pid"></result>
       <result column="icon" property="icon"></result>
       <result column="url" property="url"></result>
   </resultMap>


    <select id="getTree"  resultMap="p" parameterType="Integer">
        SELECT a.* FROM(
       SELECT DISTINCT tp.* FROM  USER tu
                LEFT JOIN user_role ur ON ur.u_id=tu.u_id
                LEFT JOIN role tr ON ur.r_id=tr.r_id
                LEFT JOIN role_power rp ON rp.r_id=tr.r_id
                LEFT JOIN six.POWER tp ON tp.id=rp.p_id
                WHERE tu.u_id=#{t_id}
        )a

    </select>

   <!--<select id="getByWhere"  resultMap="t">
   		SELECT  u.* FROM  t_class u 
   </select>
   
   <select id="toAddj" parameterType="Integer" resultMap="j">
   		SELECT  DISTINCT j.*,r.t_id  FROM  t_user u 
   		     LEFT JOIN urli r ON r.t_id=u.t_id
   		     LEFT JOIN jrel j ON j.r_id=r.r_id where r.t_id = #{id}
   </select>
   
   <select id="getRole" resultMap="j">
    	select r_id,r_name from jrel
    </select>
   
    <delete id="delRole_user" >
    	delete from urli where t_id =#{uid}
    </delete>
    
    <insert id="addRole_user">
    	insert into urli(t_id,r_id) values
    	<foreach collection="rids" item="rid"  separator=",">
    		(#{uid},#{rid})
    	</foreach>
    </insert>
   
   <select id="login" parameterType="String" resultType="com.jk.pojo.User">
   		select * from t_user where t_name = #{t_name}
   </select>
   
    
   
   <select id="getTree"  resultMap="p" parameterType="Integer">
   SELECT a.* FROM(
   		SELECT  DISTINCT p.*  FROM  t_user u 
   		     LEFT JOIN urli r ON r.t_id=u.t_id
   		     LEFT JOIN jrel j ON j.r_id=r.r_id
   		     LEFT JOIN rpli l  ON l.r_id=j.r_id
   		     LEFT JOIN POWER p  ON p.p_id=l.p_id
   		     WHERE u.t_id=#{t_id}
   		     )a
   		     
   </select>
   
   <select id="getTree2"  resultMap="p" parameterType="Integer">
           select * from power
   		     
   </select>
   
   <select id="shen" parameterType="String" resultType="com.jk.pojo.Shen">
   		select * from t_shen where sname = #{sname}
   </select>
   
   <insert id="addShen" parameterType="com.jk.pojo.Shen">
     INSERT INTO t_shen
            (
             sname )
     VALUES (
    	    #{sname})
    </insert>
   
    <insert id="addUser" parameterType="com.jk.pojo.User">
     INSERT INTO t_user
            (
             t_name,
             t_password,
             t_type)
     VALUES (#{t_name},
    	    #{t_password},
    	    #{t_type})
    </insert>
   
   <insert id="addUrli" parameterType="com.jk.pojo.Urli">
     INSERT INTO Urli
            (
            t_id,
             r_id)
     VALUES (#{t_id},
    	    #{r_id})
    </insert>
    
     <select id="getUserByWhere" resultMap="users">
   	
		   		SELECT c.*,t.sname FROM t_users c
		   		LEFT JOIN t_shen t on c.t_shen = t.sname
		   	
   </select>
   
   <select id="getUserByPage" resultMap="users">
   			
   				SELECT c.*,t.sname FROM t_users c
		   		LEFT JOIN t_shen t on c.t_shen = t.sname
		   		limit ${begin},${rows}
   			
   </select> 
   
    <select id="getUserById" parameterType="Integer" resultType="com.jk.pojo.Users">
   			
   				SELECT c.*,t.sname FROM t_users c
		   		LEFT JOIN t_shen t on c.t_shen = t.sname
		   		where c.t_ids=#{id}
   			
   </select> 
   
    <insert id="addUsers" parameterType="com.jk.pojo.Users">
    insert into t_users
            (
             t_name,
             t_password,
             t_zname,
             t_sex,
             t_eag,
             t_shen,
             t_dian,
             t_class,
             t_type,
             t_jiao,
             t_gong)
values (
        #{t_name},
        #{t_password},
        #{t_zname},
        #{t_sex},
        #{t_eag},
        #{t_shen},
        #{t_dian},
        #{t_class},
        #{t_type},
        #{t_jiao},
        #{t_gong})
    </insert>
    
     <update id="updateUser" parameterType="com.jk.pojo.Users">
    	UPDATE t_users
				SET
				  t_name =  #{t_name},
				  t_password =  #{t_password},
				  t_zname = #{t_zname},
				  t_sex =  #{t_sex},
				  t_eag = #{t_eag},
				  t_shen = #{t_shen},
				  t_dian = #{t_dian},
				  t_class = #{t_class},
				  t_type = #{t_type},
				  t_jiao = #{t_jiao},
				  t_gong = #{t_gong}
				WHERE t_ids = #{t_ids}
    </update>
    
    <delete id="delUsers" >
    	DELETE FROM t_users WHERE t_ids in (${ids})
    </delete>
    
     <delete id="delUsers2" >
    	DELETE FROM t_user WHERE t_id in (${ids})
    </delete>
    
    <delete id="delUsers3" >
    	DELETE FROM urli WHERE t_id in (${ids})
    </delete> 
    
    <update id="updateUsersType" parameterType="Integer">
    	UPDATE t_users
				SET
				  t_type = 2
				 
				WHERE t_ids = #{ids}
    </update>
   <update id="updateUsersType1" parameterType="Integer">
    	UPDATE t_user
				SET
				  t_type = 2
				 
				WHERE t_id = #{ids}
    </update>
    
    <select id="getJueByWhere" resultMap="user">
   	
		    SELECT  DISTINCT u.*,j.r_name,j.r_id,r.uid  FROM  t_user u 
   		     LEFT JOIN urli r ON r.t_id=u.t_id
   		     LEFT JOIN jrel j ON j.r_id=r.r_id
		   	
   </select>
   
   <select id="getJueByPage" resultMap="user">
   	
		    SELECT  DISTINCT u.*,j.r_name,j.r_id,r.uid  FROM  t_user u 
   		     LEFT JOIN urli r ON r.t_id=u.t_id
   		     LEFT JOIN jrel j ON j.r_id=r.r_id
		   	limit ${begin},${rows}
   </select>
   
  <update id="addjue" parameterType="com.jk.pojo.Jue">
    	UPDATE urli
				SET
				  r_id= #{r_name}
				 
				WHERE uid = #{uid}
    </update> 
 
 
 <select id="getClassByWhere" resultMap="users">
   	
		   		SELECT c.* FROM t_users c where t_class=#{t_class}
		   		
		   	
   </select>
   
   <select id="getClassByPage" resultMap="users">
   	
		   		SELECT c.* FROM t_users c where t_class=#{t_class} limit ${begin},${rows}
		   		
		   	
   </select>
   
   <select id="getquan" resultMap="j">
    	select r_id,r_name from jrel
    </select>
    
     &lt;!&ndash; 权限有则删除 &ndash;&gt;
   <delete id="delRolePower">
   	DELETE FROM rpli WHERE r_id = #{rid}
   </delete>
   
   
   &lt;!&ndash; 权限有则删除，删除之后进行新增 &ndash;&gt;
   <insert id="addRolePower">
   	insert into rpli(r_id,p_id) values
   	<foreach collection="pids" item="pid"  separator=",">
   		(#{rid},#{pid})
   	</foreach>
   </insert>
   
   
  <insert id="addJD" >
   		INSERT INTO `test`.`power`
            (
             `p_text`,
             `p_url`,
             `p_parentid`
            )
		VALUES (
		        #{jdtext},
		        #{jdurl},
		        #{pid}
		        )
   	</insert>
   	
   	<delete id="delJD">
			   	DELETE
			FROM `test`.`power`
			WHERE `p_id` = #{pid}
   	</delete>
   	<delete id="delJD2">
				DELETE
				FROM `test`.`rpli`
				WHERE `p_id` = #{pid}
   	</delete>
   	
   	 <update id="updateJD">
				 UPDATE `test`.`power`
				SET 
				  `p_text` = #{jdtext},
				  `p_url` = #{jdurl}
				  
				WHERE `p_id` = #{pid}
    </update> -->
     <!-- <insert id="addinserts" parameterType="com.jk.pojo.UserLogin">
			         INSERT INTO `test`.`t_log`
			            (
			             `type`,
			             `requestUri`,
			             `method`,
			             `params`,
			             `operateDate`,
			             `miao`)
			VALUES (
			        #{type},
			        #{requestUri},
			        #{method},
			        #{params},
			        #{operateDate},
			        #{miao})
     
     
     </insert>
      -->
     <!--<select id="getrolepowerbyid" parameterType="Integer" resultMap="p">
   		SELECT * FROM rpli WHERE r_id = #{id}
   </select>-->
     
      
 </mapper>